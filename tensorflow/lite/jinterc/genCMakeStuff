#!/usr/bin/perl

#==============================================================================
# Utility script to generate tensorflow lite source and include defs in a 
# suitable format for cmake.  This uses the existing makefile, to hopefully
# reducing the need to tweak the cmake build after every merge with TFL
#==============================================================================

#==============================================================================
#  Crash & Burn
#==============================================================================

sub usage {
    my $msg = shift;
    my $retCode = 0;
    if($msg ne "") {
        print "*** ERROR: $msg\n";
        $retCode = 1;
    }
    print "usage: genCmakeStuffn";
    exit $retCode;
}

#==============================================================================
#  Try to run the makefile helper script
#==============================================================================

$tfHome = $ENV{TFLOW_HOME};
$cmkFile = "cmake/modules/TfLiteDecls.cmake";

die "TFLOW_HOME environment variable not set"
    unless $tfHome ne "";

$incFile = "tfinc.txt";
$srcFile = "tfsrc.txt";

$makeScript = "$tfHome/tensorflow/lite/tools/make/list_lib.sh";

usage("Helper script not found: $makeScript")
    unless -x $makeScript;

system($makeScript);

usage("Strange: expecting $incFile to be produced by $makeScript")
    unless -f $incFile;

usage("Strange: expecting $srcFile to be produced by $makeScript")
    unless -f $srcFile;

open(FINC, "< $incFile");
$incLine = <FINC>;
close(FINC);

open(FSRC, "< $srcFile");
$srcLine = <FSRC>;
close(FSRC);

open(CMK, "> $cmkFile");

system("rm -f $incFile");
system("rm -f $srcFile");

print CMK << "EOF";
#===============================================================================
# Cmake information automatically generated by genCmakeStuff
# Do Not edit...
#===============================================================================

# -- The following is cmake verison of the TF lite source files, as 
#    identified by the usual TFLite makefile and these helper scripts.
#
EOF

# print("Sources:\n$srcLine\nIncludes:\n$incLine\nThats all folks....\n");

@slist = split(' ', $srcLine);

SRC_FILE: for($i = 0; $i < $#slist; $i++) {

    if($slist[$i] eq "TF_LITE_LIB_SRC") { next SRC_FILE; }

    $srcFile = "$tfHome/$slist[$i]";

    die("Problem in src file identification: cannot find $srcFile")
        unless -f $srcFile;

    print(CMK "list(APPEND TFLITE_SRC $srcFile)\n");
}

print CMK << "EOF";

# -- The next section adds include directories to use...
#
EOF

@ilist = split(' ', $incLine);

INC_FILE: for($i = 0; $i < $#ilist; $i++) {

    $incDir = $ilist[$i];

    if($incDir eq "TF_LITE_INCLUDES") { next INC_FILE; }

    if($incDir =~/-I(.*)/) {
        $incDir = $1;

        if(($incDir eq ".") || ($incDir eq "")) {
            next INC_FILE;
        }

        die("Script issue: directory $incDir does not exist...")
            unless -d $incDir;

        print(CMK "include_directories(\"$incDir\")\n");
    }
    else {
        die("Unknown dir: $incDir");
    }
}

close(CMK);

print("cmake info saved to: $cmkFile\n");
